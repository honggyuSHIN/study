import sys
input = sys.stdin.readline

'''
[DP]
1. n일 이내로만 일할 수 있음(상담 종료일이 n일 이내여야 상담 진행 가능)
2. i일차의 최대 수익은 이전까지의 최대 수익을 이용해 구할 수 있음 => 누적합(DP) 사용
참고) https://ddiyeon.tistory.com/49
'''


n = int(input())
dp = [0] * (n+1) # dp[i] : i일차까지 벌 수 있는 최대 금액

for i in range(1, n+1):
    t, p = map(int, input().split())
    dp[i] = max(dp[i], dp[i-1]) # 전날(i-1)까지의 수익이 i일차까지의 수익보다 클 경우 갱신
    # == 현재까지 계산된 'i일차까지 얻을 수 있는 수익 누적합'보다, '전날까지의 수익 누적합'이 더 클 경우 갱신
    end = i + t - 1 # i일차 상담의 종료일
    if end <= n: # i일차 상담의 종료일이 n일 이내라 상담 수행 가능하면
        dp[end] = max(dp[end], dp[i-1]+p) # (전날(i-1)까지의 수익 + i일차 상담의 수익)이 end일까지의 수익보다 클 경우 갱신
        # == 현재까지 계산된 'i일차 상담 종료일까지 얻을 수 있는 수익 누적합'보다, 
        #    'i-1일차까지 얻을 수 있는 수익 누적합' + 'i일차 상담 수행 후 얻을 수 있는 수익'이 더 클 경우 갱신

print(dp[-1])